%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11 (Build 15A278b) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 297 89
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 297 89
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.83137256 0.3019608 0.23921569 sc
q
64.825546 53.84177 m
64.825546 49.088421 64.00602 44.80637 62.366928 40.995495 c
60.727844 37.184616 58.460476 33.9543 55.564754 31.304443 c
52.669037 28.654587 49.240665 26.619419 45.279537 25.198877 c
41.318413 23.778336 37.029533 23.068075 32.412773 23.068075 c
27.796013 23.068075 23.507135 23.778336 19.546009 25.198877 c
15.584883 26.619419 12.156512 28.654587 9.2607927 31.304443 c
6.3650727 33.9543 4.0977039 37.184616 2.4586174 40.995495 c
0.81953096 44.80637 0 49.088421 0 53.84177 c
0 58.677074 0.81270152 63.000103 2.4381289 66.810974 c
4.0635562 70.621857 6.3172665 73.845345 9.1993275 76.481537 c
12.081388 79.117737 15.502929 81.139244 19.464054 82.546127 c
23.42518 83.953011 27.741377 84.656441 32.412773 84.656441 c
37.084171 84.656441 41.400368 83.953011 45.361492 82.546127 c
49.322617 81.139244 52.74416 79.117737 55.626221 76.481537 c
58.508282 73.845345 60.76199 70.621857 62.387417 66.810974 c
64.012848 63.000103 64.825546 58.677074 64.825546 53.84177 c
64.825546 53.84177 l
h
48.270855 53.84177 m
48.270855 55.644764 48.188904 57.488708 48.024994 59.373661 c
47.861084 61.25861 47.560593 63.088894 47.123501 64.864571 c
46.686413 66.640251 46.092251 68.306625 45.341003 69.863762 c
44.589756 71.420891 43.626808 72.779945 42.452129 73.940971 c
41.277451 75.10199 39.863758 76.017128 38.211014 76.686424 c
36.558266 77.355721 34.625542 77.690361 32.412773 77.690361 c
30.172689 77.690361 28.219473 77.355721 26.553068 76.686424 c
24.886663 76.017128 23.466145 75.108818 22.291466 73.961456 c
21.116787 72.814095 20.160667 71.461868 19.423079 69.904739 c
18.68549 68.347603 18.104988 66.688057 17.681557 64.926041 c
17.258127 63.164021 16.96446 61.333733 16.800552 59.435123 c
16.636644 57.536518 16.554691 55.672085 16.554691 53.84177 c
16.554691 52.038776 16.636644 50.194832 16.800552 48.309879 c
16.96446 46.424931 17.264956 44.601475 17.702045 42.839458 c
18.139135 41.077438 18.733295 39.417889 19.484543 37.860756 c
20.235792 36.303623 21.19874 34.944569 22.373419 33.78355 c
23.548098 32.622528 24.961788 31.700558 26.614534 31.017605 c
28.267279 30.334652 30.200006 29.993181 32.412773 29.993181 c
34.570904 29.993181 36.455826 30.341482 38.067593 31.038094 c
39.679363 31.734705 41.072563 32.677166 42.247242 33.865505 c
43.421921 35.053841 44.398529 36.433384 45.177097 38.004177 c
45.955662 39.574966 46.570309 41.241348 47.021057 43.003365 c
47.471809 44.765385 47.792789 46.57518 47.984016 48.432812 c
48.175243 50.290443 48.270855 52.09341 48.270855 53.84177 c
48.270855 53.84177 l
h
119.20197 51.383152 m
119.20197 48.186935 118.81269 44.854176 118.03413 41.384777 c
117.25556 37.915375 116.16969 34.51432 114.77646 31.181513 c
113.38323 27.848703 111.71686 24.713997 109.77727 21.777302 c
107.83768 18.840605 105.7069 16.306889 103.38486 14.176075 c
98.180794 17.003485 l
98.918381 18.36939 99.614983 19.899181 100.27061 21.592905 c
100.92625 23.286627 101.52041 25.082766 102.05312 26.981375 c
102.58582 28.879984 103.06387 30.840029 103.4873 32.861568 c
103.91074 34.883106 104.26587 36.884129 104.5527 38.864693 c
104.83955 40.845257 105.05809 42.771152 105.20834 44.642445 c
105.35859 46.513733 105.43372 48.255238 105.43372 49.867004 c
105.43372 50.932411 105.39274 52.072926 105.31078 53.288582 c
105.22883 54.504238 105.05809 55.719875 104.79857 56.935532 c
104.53905 58.151188 104.19075 59.319019 103.75365 60.43906 c
103.31657 61.559101 102.73607 62.542542 102.01214 63.3894 c
101.28821 64.236259 100.41404 64.919205 99.38961 65.438248 c
98.365181 65.957291 97.156372 66.216812 95.763153 66.216812 c
94.397247 66.216812 93.18161 65.909485 92.116203 65.29483 c
91.050797 64.680176 90.108337 63.874302 89.288788 62.87719 c
88.469246 61.880077 87.765816 60.739563 87.178474 59.455612 c
86.591141 58.171661 86.113075 56.853584 85.744286 55.501339 c
85.375488 54.14909 85.109138 52.817352 84.945236 51.506084 c
84.781326 50.194813 84.699371 49.020153 84.699371 47.982067 c
84.699371 24.256407 l
70.808182 24.256407 l
70.808182 71.584793 l
76.135185 71.584793 l
82.486618 60.561993 l
83.251526 62.392303 84.207642 64.058685 85.355003 65.56118 c
86.502365 67.063675 87.799957 68.34761 89.24781 69.413017 c
90.695671 70.478424 92.300591 71.297951 94.062607 71.871635 c
95.824623 72.445312 97.730034 72.732147 99.778893 72.732147 c
103.05707 72.732147 105.91177 72.199455 108.34308 71.134048 c
110.77439 70.068642 112.7959 68.586655 114.40767 66.688049 c
116.01943 64.789436 117.22141 62.535728 118.01364 59.926849 c
118.80586 57.31797 119.20197 54.4701 119.20197 51.383152 c
119.20197 51.383152 l
h
173.41449 24.256407 m
168.08748 24.256407 l
161.94093 34.541622 l
161.33994 32.820583 160.51358 31.263474 159.46184 29.870251 c
158.41008 28.477026 157.19444 27.281878 155.81488 26.284767 c
154.43532 25.287655 152.91919 24.51593 151.26643 23.969568 c
149.61369 23.423206 147.87219 23.150028 146.04187 23.150028 c
142.43588 23.150028 139.2124 23.791994 136.37132 25.075947 c
133.53023 26.359898 131.12628 28.115059 129.15938 30.341486 c
127.19247 32.567909 125.68999 35.183582 124.65191 38.188572 c
123.61382 41.193565 123.09478 44.417053 123.09478 47.859135 c
123.09478 51.301216 123.61382 54.524704 124.65191 57.529697 c
125.68999 60.534687 127.19247 63.143528 129.15938 65.356293 c
131.12628 67.569061 133.53023 69.317398 136.37132 70.601349 c
139.2124 71.8853 142.43588 72.52726 146.04187 72.52726 c
148.80101 72.52726 151.33472 71.994568 153.6431 70.929161 c
155.95148 69.863754 157.92519 68.197372 159.56427 65.92997 c
159.56427 89 l
173.41449 89 l
173.41449 24.256407 l
h
159.48232 47.859135 m
159.48232 48.951859 159.40036 50.153839 159.23645 51.465107 c
159.07256 52.776375 158.81303 54.101284 158.4579 55.439873 c
158.10275 56.778458 157.63835 58.07605 157.06468 59.332684 c
156.491 60.589317 155.78757 61.709343 154.95436 62.692795 c
154.12117 63.676247 153.15138 64.461632 152.045 65.048965 c
150.93861 65.636307 149.67517 65.92997 148.25464 65.92997 c
146.69749 65.92997 145.34528 65.649963 144.19791 65.089943 c
143.05055 64.529922 142.06712 63.778687 141.24757 62.836212 c
140.42802 61.893738 139.75192 60.807858 139.21921 59.578545 c
138.68651 58.349228 138.26991 57.065296 137.96942 55.726711 c
137.66891 54.388123 137.4572 53.042725 137.33427 51.690479 c
137.21135 50.338234 137.14987 49.061131 137.14987 47.859135 c
137.14987 46.657139 137.21135 45.380035 137.33427 44.02779 c
137.4572 42.675541 137.66891 41.330147 137.96942 39.991558 c
138.26991 38.652973 138.68651 37.362209 139.21921 36.119236 c
139.75192 34.876263 140.42802 33.783554 141.24757 32.84108 c
142.06712 31.898605 143.05055 31.147367 144.19791 30.587347 c
145.34528 30.027325 146.69749 29.747318 148.25464 29.747318 c
149.81177 29.747318 151.17764 30.020496 152.35233 30.566858 c
153.52701 31.11322 154.53093 31.857628 155.36414 32.800102 c
156.19734 33.742577 156.88028 34.821625 157.41298 36.037281 c
157.94568 37.252937 158.36227 38.536869 158.66278 39.889114 c
158.96327 41.241364 159.17499 42.600418 159.29793 43.966324 c
159.42085 45.33223 159.48232 46.629818 159.48232 47.859135 c
159.48232 47.859135 l
h
193.73906 46.711781 m
195.43279 46.329327 197.12648 46.028831 198.82021 45.810287 c
200.51392 45.591743 202.22128 45.482471 203.94232 45.482471 c
205.74532 45.482471 207.41852 45.653206 208.96199 45.994682 c
210.50546 46.336159 211.84404 46.909832 212.97774 47.715714 c
214.11143 48.521599 215.00609 49.593819 215.66173 50.932407 c
216.31737 52.270992 216.64517 53.937374 216.64517 55.931595 c
216.64517 57.543362 216.42664 59.01852 215.98955 60.357105 c
215.55246 61.695694 214.90366 62.843037 214.04314 63.799171 c
213.18262 64.755302 212.12405 65.49971 210.86743 66.032417 c
209.61079 66.565117 208.14929 66.831467 206.48289 66.831467 c
204.92575 66.831467 203.52573 66.544632 202.28275 65.970947 c
201.03978 65.39727 199.94707 64.625542 199.00459 63.65575 c
198.06212 62.685959 197.25624 61.559105 196.58696 60.275154 c
195.91766 58.991203 195.36447 57.652634 194.92738 56.259411 c
194.4903 54.866188 194.17615 53.459328 193.98492 52.038784 c
193.79369 50.618244 193.69807 49.279675 193.69807 48.023041 c
193.69807 47.367413 l
193.69807 47.148865 193.71173 46.930325 193.73906 46.711781 c
193.73906 46.711781 l
h
227.87286 56.054527 m
227.87286 54.114941 227.5587 52.387096 226.93039 50.870941 c
226.30208 49.354786 225.44839 48.023048 224.36934 46.875687 c
223.29027 45.728329 222.04048 44.758549 220.61993 43.966324 c
219.1994 43.174099 217.68327 42.525303 216.0715 42.019917 c
214.45973 41.514534 212.80019 41.152573 211.0928 40.934029 c
209.38542 40.715485 207.72586 40.606213 206.11409 40.606213 c
204.06525 40.606213 202.04373 40.74963 200.04951 41.036472 c
198.05528 41.323311 196.08841 41.780884 194.14882 42.409199 c
194.44933 40.606205 194.92738 38.892017 195.58302 37.26659 c
196.23865 35.641163 197.11282 34.220642 198.20555 33.004986 c
199.29826 31.789331 200.64366 30.826382 202.24178 30.116112 c
203.83989 29.405842 205.73163 29.050711 207.91708 29.050711 c
209.36494 29.050711 210.74449 29.269253 212.05576 29.706343 c
213.36702 30.143433 214.569 30.75808 215.66173 31.550304 c
216.75446 32.342529 217.71741 33.284992 218.5506 34.377716 c
219.3838 35.47044 220.05992 36.686077 220.57896 38.024666 c
226.5616 35.811909 l
225.6601 33.653778 224.42398 31.789345 222.85318 30.218554 c
221.28239 28.647762 219.50674 27.350172 217.52618 26.325743 c
215.54562 25.301313 213.44215 24.543247 211.21573 24.051521 c
208.9893 23.559795 206.7834 23.313936 204.59795 23.313936 c
200.99196 23.313936 197.65919 23.921755 194.59958 25.137411 c
191.53995 26.353067 188.90379 28.053595 186.69102 30.239042 c
184.47826 32.424492 182.74358 35.033333 181.48694 38.065643 c
180.23032 41.09795 179.60201 44.417053 179.60201 48.023041 c
179.60201 51.629032 180.23032 54.948132 181.48694 57.980442 c
182.74358 61.012753 184.47826 63.621593 186.69102 65.807045 c
188.90379 67.992493 191.53995 69.693016 194.59958 70.908676 c
197.65919 72.124329 200.99196 72.732147 204.59795 72.732147 c
206.34631 72.732147 208.13562 72.609215 209.96593 72.363358 c
211.79625 72.117493 213.5719 71.728218 215.29294 71.195511 c
217.01398 70.662811 218.63937 69.973038 220.16919 69.126175 c
221.69901 68.279312 223.03075 67.234413 224.16444 65.99144 c
225.29814 64.748466 226.19963 63.307457 226.86893 61.668369 c
227.53822 60.029282 227.87286 58.15802 227.87286 56.054527 c
227.87286 56.054527 l
h
294.17358 8.5212555 m
278.76624 0.080001831 l
277.09985 1.5005435 275.45395 3.1054583 273.82852 4.8947945 c
272.20309 6.6841307 270.66647 8.575881 269.2186 10.570103 c
267.77075 12.564325 266.44583 14.626811 265.24384 16.757624 c
264.04184 18.888435 263.04477 21.005558 262.25253 23.109053 c
257.85431 23.30028 253.78398 24.140299 250.0414 25.629135 c
246.29881 27.117971 243.0685 29.187288 240.35034 31.837145 c
237.63219 34.487 235.50142 37.662682 233.95795 41.364288 c
232.41446 45.065891 231.64275 49.22501 231.64275 53.84177 c
231.64275 58.677074 232.45544 63.000103 234.08087 66.810974 c
235.7063 70.621857 237.96001 73.845345 240.84207 76.481537 c
243.72414 79.117737 247.14568 81.139244 251.1068 82.546127 c
255.06792 83.953011 259.38412 84.656441 264.05551 84.656441 c
268.7269 84.656441 273.04312 83.953011 277.00424 82.546127 c
280.96536 81.139244 284.3869 79.117737 287.26895 76.481537 c
290.15103 73.845345 292.40472 70.621857 294.03015 66.810974 c
295.65558 63.000103 296.46829 58.677074 296.46829 53.84177 c
296.46829 49.771374 295.86731 46.056164 294.66531 42.696037 c
293.46332 39.335911 291.77643 36.371941 289.60464 33.804039 c
287.43286 31.236135 284.84451 29.105356 281.83951 27.411633 c
278.83453 25.717911 275.52908 24.515932 271.9231 23.80566 c
273.45291 22.193892 275.11929 20.636784 276.92227 19.134287 c
278.72528 17.631792 280.58972 16.22493 282.51562 14.91366 c
284.44156 13.602391 286.39478 12.407242 288.37534 11.328176 c
290.3559 10.249111 292.28864 9.3134804 294.17358 8.5212555 c
294.17358 8.5212555 l
h
279.9136 53.84177 m
279.9136 55.644764 279.83163 57.488708 279.66772 59.373661 c
279.50381 61.25861 279.20334 63.088894 278.76624 64.864571 c
278.32916 66.640251 277.73499 68.306625 276.98373 69.863762 c
276.23248 71.420891 275.26956 72.779945 274.09488 73.940971 c
272.9202 75.10199 271.5065 76.017128 269.85376 76.686424 c
268.20102 77.355721 266.26828 77.690361 264.05551 77.690361 c
261.81543 77.690361 259.86221 77.355721 258.1958 76.686424 c
256.52942 76.017128 255.10889 75.108818 253.9342 73.961456 c
252.75952 72.814095 251.80341 71.461868 251.06583 69.904739 c
250.32823 68.347603 249.74773 66.688057 249.3243 64.926041 c
248.90086 63.164021 248.60721 61.333733 248.4433 59.435123 c
248.27939 57.536518 248.19743 55.672085 248.19743 53.84177 c
248.19743 52.038776 248.27939 50.194832 248.4433 48.309879 c
248.60721 46.424931 248.9077 44.601475 249.34479 42.839458 c
249.78188 41.077438 250.37604 39.417889 251.12729 37.860756 c
251.87854 36.303623 252.84148 34.944569 254.01616 33.78355 c
255.19084 32.622528 256.60452 31.700558 258.25726 31.017605 c
259.91003 30.334652 261.84274 29.993181 264.05551 29.993181 c
266.21365 29.993181 268.09857 30.341482 269.71033 31.038094 c
271.32211 31.734705 272.7153 32.677166 273.88998 33.865505 c
275.06467 35.053841 276.04126 36.433384 276.81982 38.004177 c
277.59839 39.574966 278.21304 41.241348 278.66379 43.003365 c
279.11456 44.765385 279.43555 46.57518 279.62677 48.432812 c
279.81799 50.290443 279.9136 52.09341 279.9136 53.84177 c
279.9136 53.84177 l
h
279.9136 53.84177 m
W*
0 0 297 89 rc
-5 94 m
301.46829 94 l
301.46829 -4.9199982 l
-5 -4.9199982 l
h
f
ep
end
